module World.Map exposing (..)

import Config
import Dict exposing (Dict)
import Game exposing (Game)
import Game.Build


get : ( Int, Int ) -> Game
get pos =
    Game.Build.constant
        (dict
            |> Dict.get pos
            |> Maybe.withDefault []
        )
        (getDoors pos)


getDoors : ( Int, Int ) -> List ( ( Int, Int ), { room : ( Int, Int ) } )
getDoors ( x, y ) =
    [ ( ( x - 1, y ), ( -1, 2 ) )
    , ( ( x, y - 1 ), ( 2, -1 ) )
    , ( ( x + 1, y ), ( Config.roomSize, 2 ) )
    , ( ( x, y + 1 ), ( 2, Config.roomSize ) )
    ]
        |> List.filterMap
            (\( room, pos ) ->
                if dict |> Dict.member room then
                    Just ( pos, { room = room } )

                else
                    Nothing
            )


dict : Dict ( Int, Int ) (List String)
dict =
    sokoBombLevels ( 0, 0 )
        ++ [ ( ( -1, -12 )
             , [ "❌❌⬜⬜⬜"
               , "❌❌⬜❌⬜"
               , "⬜❌⬜❌⬜"
               , "⬜❌⬜❌❌"
               , "⬜⬜⬜❌❌"
               ]
             )
           , ( ( -2, -12 )
             , [ "❌❌❌❌❌"
               , "❌⬜⬜⬜⬜"
               , "❌⬜📦⬜⬜"
               , "❌❌❌❌❌"
               , "❌⬜⬜⬜❌"
               ]
             )
           , ( ( -2, -11 )
             , [ "⬜⬜⬜⬜⬜"
               , "⬜⬜📦⬜⬜"
               , "⬜⬜⬜⬜⬜"
               , "❌❌❌❌❌"
               , "⬜⬜📦⬜⬜"
               ]
             )
           , ( ( -2, -10 )
             , [ "⬜⬜⬜⬜⬜"
               , "⬜📦📦📦⬜"
               , "❌❌📦❌❌"
               , "❌❌❌❌❌"
               , "❌❌📦❌❌"
               ]
             )
           , ( ( -2, -9 )
             , [ "⬜⬜⬜⬜⬜"
               , "📦📦📦📦📦"
               , "⬜📦⬜📦⬜"
               , "❌❌🧱❌❌"
               , "❌❌❌❌❌"
               ]
             )
           , ( ( -2, -8 )
             , [ "⬜⬜⬜⬜⬜"
               , "⬜⬜📦⬜⬜"
               , "⬜📦🧨📦⬜"
               , "❌❌❌❌❌"
               , "🧱🧱🧱🧱🧱"
               ]
             )
           , ( ( -1, -8 )
             , [ "🧱🧱🧱🧱🧱"
               , "⬜⬜❌⬜⬜"
               , "⬜📦❌⬜⬜"
               , "⬜⬜❌⬜⬜"
               , "🧱🧱🧱🧱🧱"
               ]
             )
           ]
        |> Dict.fromList


sokoBombLevels : ( Int, Int ) -> List ( ( Int, Int ), List String )
sokoBombLevels ( x, y ) =
    [ ( ( x, y )
      , [ "🧱📦⬜📦🧱"
        , "🧱⬜📦⬜🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 1 )
      , [ "🧱📦⬜📦🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱📦📦📦🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 2 )
      , [ "🧱⬜📦⬜🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱📦⬜📦🧱"
        , "🧱⬜📦⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 3 )
      , [ "🧱📦📦📦🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜🧨⬜🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 4 )
      , [ "🧱⬜📦⬜🧱"
        , "🧱📦📦📦🧱"
        , "🧱⬜🧨⬜🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 5 )
      , [ "🧱📦📦📦🧱"
        , "🧱📦🧨📦🧱"
        , "🧱⬜🧨⬜🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 6 )
      , [ "🧱🧱🧱🧱🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜🧨⬜🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 7 )
      , [ "🧱🧱🧱🧱🧱"
        , "🧱📦📦📦🧱"
        , "🧱🧨🧨🧨🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 8 )
      , [ "🧱🧱🧱🧱🧱"
        , "🧱🧨📦🧨🧱"
        , "🧱📦🧨📦🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 9 )
      , [ "🧱⬜📦⬜🧱"
        , "🧨⬜⬜⬜🧨"
        , "🧱📦📦📦🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 10 )
      , [ "🧱⬜📦⬜🧱"
        , "🧱📦⬜📦🧱"
        , "🧨⬜📦⬜🧨"
        , "🧨📦📦📦🧨"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 11 )
      , [ "🧱⬜🧱⬜🧱"
        , "🧨🧱📦🧱🧨"
        , "🧨📦🧨📦🧨"
        , "🧨⬜🧨⬜🧨"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 12 )
      , [ "🧱🧱🧱🧱🧱"
        , "🧱⬜🧨⬜🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    , ( ( x, y - 13 )
      , [ "🧱🧱🧱🧱🧱"
        , "🧱🧱🧱🧱🧱"
        , "🧱⬜💎⬜🧱"
        , "🧱⬜⬜⬜🧱"
        , "🧱⬜😊⬜🧱"
        ]
      )
    ]
